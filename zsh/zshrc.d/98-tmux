#########################################
# tmux
# Author: Rui Pinheiro
#
# Tmux-related functionality

##########
# Always enable UTF-8, 256 color mode
alias tmux='tmux -u -2'

##########
# Tmux helper: Create new session, attach to main session if it exists
function tmux_new {
	if [[ ! -z "$@" ]]; then
		tmux new $@
		return $?
	fi

	if [[ ! -z "$TMUX" ]]; then
		echo_error "Already inside a tmux session" "tmux_new"
		return 1
	fi

	local has_session
	tmux has-session -t "$TMUX_MAIN_SESSION" > /dev/null 2>&1
	has_session=$?

	# If main session doesn't exist, create it (in detached form)
	if [[ "$has_session" -ne "0" ]]; then
		echo_info "Creating tmux session \"$TMUX_MAIN_SESSION\"..." "tmux_new"
		tmux new -s "$TMUX_MAIN_SESSION" -d
	fi

	# Attach to the main session
	echo_info "Attaching to tmux session \"$TMUX_MAIN_SESSION\"..." "tmux_new"
	tmux new -t "$TMUX_MAIN_SESSION"

	echo_info "Done." "tmux_new"
	return 0
}

function tmux_env {
	if [[ -z "$TMUX" ]]; then
		echo_error "Not inside a tmux session" "tmux_env"
		return 1
	fi

	echo_info "Updating environment using 'tmux show-environment'..." "tmux_env"

	# Loop through all tmux environment variables
	local var
	while read var; do
		[[ -z "$var" ]] && continue

		# '-' prefix means the variable should be deleted
		if [[ $var[0] == "-" ]]; then
			unset "${var:2}"
		else
			# Split variable name and value
			local name="${var%%=*}"
			local val="${var##*=}"

			# Export it
			echo_debug "$name=\"$val\"" "tmux_env"
			export "$name"="$val"
		fi
	done < <(tmux show-environment)
}

alias tn="tmux_new"
alias ta="tmux attach"
alias tl="tmux list-sessions"
alias te="tmux_env"


# If USE_TMUX, we want to boot straight into tmux
if [[ -z "$TMUX" ]] && is_true "$USE_TMUX" ; then
	tmux_new
fi
