########################################
# prompt/init
# Author: Rui Pinheiro
#
# Prompt utilities

autoload -Uz add-zsh-hook

# Prompt-related shell options
setopt promptsubst
setopt prompt_cr

# Initialize mkprompt environment

# Helper functions
function mkprompt_start {
	typeset -g MKPROMPT_LEFT="${1:-1}"
	typeset -g MKPROMPT_ARR=()
	typeset -g MKPROMPT_NEXT_DELIM=0
	typeset -g MKPROMPT_NEXT_DELIM_CHR=""
	typeset -g MKPROMPT_NEXT_DELIM_VAR=""
}

function mkprompt_add {
	local color="$1" value="$2" next_delim_chr="${3:- }"

	if [[ ! -z "$value" ]]; then
		[[ ! -z "$color" ]] && color="%{$color%}"
		local reset="%{$reset_color%}"
		local add="${color}${value}${reset}"

		if is_true "$MKPROMPT_NEXT_DELIM"; then
			local delim="$MKPROMPT_NEXT_DELIM_CHR"
			[[ ! -z "$MKPROMPT_NEXT_DELIM_VAR" ]] && delim="\${${MKPROMPT_NEXT_DELIM_VAR}:+${delim}}"
			MKPROMPT_ARR+=("$delim")
		fi

		MKPROMPT_ARR+=("${add}")

		MKPROMPT_NEXT_DELIM_CHR="$next_delim_chr" # default delimiter
		MKPROMPT_NEXT_DELIM_VAR=""
		MKPROMPT_NEXT_DELIM=1
	fi
}

function mkprompt_add_var {
	local color="$1" var="$2"

	mkprompt_add "$color" "\${${var}}"
	MKPROMPT_NEXT_DELIM_VAR="$var"
}

function mkprompt_text {
	MKPROMPT_ARR+=("$@")
}

function mkprompt_delim {
	is_true "$MKPROMPT_NEXT_DELIM" && MKPROMPT_NEXT_DELIM_CHR="$@"
}

function mkprompt_save {
	local varname="$1"

	if is_true "$MKPROMPT_LEFT"; then
		export "$varname"="${(@aj::)MKPROMPT_ARR}"
	else
		local reversed=(${(@Oa)MKPROMPT_ARR})
		export "$varname"="${(j::)reversed}"
	fi
}

function mkprompt_finish {
	unset -m "MKPROMPT_*"
	unfunction -m "mkprompt_*"
}
